"use strict";
//
// Copyright 2023 Signal Messenger, LLC.
// SPDX-License-Identifier: AGPL-3.0-only
//
Object.defineProperty(exports, "__esModule", { value: true });
const ByteArray_1 = require("../internal/ByteArray");
const Native = require("../../../Native");
const BackupLevel_1 = require("./BackupLevel");
const BackupCredentialType_1 = require("./BackupCredentialType");
class BackupAuthCredentialPresentation extends ByteArray_1.default {
    constructor(contents) {
        super(contents, Native.BackupAuthCredentialPresentation_CheckValidContents);
    }
    verify(serverParams, now = new Date()) {
        Native.BackupAuthCredentialPresentation_Verify(this.contents, Math.floor(now.getTime() / 1000), serverParams.contents);
    }
    getBackupId() {
        return Native.BackupAuthCredentialPresentation_GetBackupId(this.contents);
    }
    getBackupLevel() {
        const n = Native.BackupAuthCredentialPresentation_GetBackupLevel(this.contents);
        if (!(n in BackupLevel_1.default)) {
            throw new TypeError(`Invalid BackupLevel ${n}`);
        }
        return n;
    }
    getType() {
        const n = Native.BackupAuthCredentialPresentation_GetType(this.contents);
        if (!(n in BackupCredentialType_1.default)) {
            throw new TypeError(`Invalid BackupCredentialType ${n}`);
        }
        return n;
    }
}
exports.default = BackupAuthCredentialPresentation;
//# sourceMappingURL=BackupAuthCredentialPresentation.js.map